[{"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/index.js":"1","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/reportWebVitals.js":"2","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/App.js":"3","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Navigation/Navigation.js":"4","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/page.js":"5","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Http/Request.js":"6","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/About.js":"7","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/CreatePage.js":"8","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/Home.js":"9","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Http/HttpEnv.js":"10","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Errors/display.js":"11","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/FormDisplay.js":"12","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/forms/FormCreation.js":"13","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/FormTags.js":"14","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/FormContext.js":"15","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/helpers/generaterandom.js":"16"},{"size":501,"mtime":1649209153149,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1613502427777,"results":"19","hashOfConfig":"18"},{"size":545,"mtime":1643583011232,"results":"20","hashOfConfig":"18"},{"size":872,"mtime":1643519680547,"results":"21","hashOfConfig":"18"},{"size":487,"mtime":1643520417445,"results":"22","hashOfConfig":"18"},{"size":4882,"mtime":1643519806281,"results":"23","hashOfConfig":"18"},{"size":102,"mtime":1613702092248,"results":"24","hashOfConfig":"18"},{"size":1847,"mtime":1645408557421,"results":"25","hashOfConfig":"18"},{"size":99,"mtime":1613704057037,"results":"26","hashOfConfig":"18"},{"size":0,"mtime":1613502427776,"results":"27","hashOfConfig":"18"},{"size":790,"mtime":1643495281514,"results":"28","hashOfConfig":"18"},{"size":450,"mtime":1617298382779,"results":"29","hashOfConfig":"18"},{"size":69,"mtime":1643520123429,"results":"30","hashOfConfig":"18"},{"size":5678,"mtime":1645408605325,"results":"31","hashOfConfig":"18"},{"size":87,"mtime":1636855258948,"results":"32","hashOfConfig":"18"},{"size":337,"mtime":1643495547028,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w6zsa0",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/index.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/reportWebVitals.js",[],["70","71"],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/App.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Navigation/Navigation.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/page.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Http/Request.js",["72"],"import STATUS from './HttpEnv';\nimport axios from 'axios';\nclass IgnRequest {\n  constructor(){\n    this.client  =  axios; //http client will be using axios;\n    this.status  =  STATUS.IDLE;\n    this.method  =  'GET';\n    this.destination  = \"\";\n    this.data = {}; // the data being sent on a post request.\n    this.header = {};\n    this.payload = {};\n    this.responseData =  null;\n    this.error = {};\n  }\n\n  init(configuration){// expects an object with the appropriate property names\n    this.setDestination(configuration.url);\n    this.setMethod(configuration.method);\n    this.setData(configuration.data)\n    this.setHeader(configuration.headers);\n    this.setPayload(); // combines the configurations that were passed into an object.\n    // this.makeConnection();\n  }\n  \n  setDestination(url){\n    if ( !this.paramIsNotPassed(url) ){\n      return false;\n    }\n    \n    let cleanUrl = url.trim();\n    \n    if( !this.validUrl(cleanUrl) ) {\n      this.addError(\"Invalid Url\",`The url you provided ${url} is invalid.`) \n      return false;\n    }\n    \n    this.updateDestination = cleanUrl;\n    return this;\n\n  }\n\n\n  get getDestination(){\n      return this.destination;\n  }\n\n  set updateDestination(url){\n    this.destination = url;\n  }\n\n  validUrl(url) {\n    var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n      '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n    return pattern.test(url);\n    \n  }\n  \n  paramIsNotPassed(param){\n    if(!param){\n      this.addError(\"Missing Parameter\",\"no parameter was passed to the function\")\n      return false;\n    }\n    return true;\n  } \n\n  addError(key,message){\n    this.error[key] = message;\n  \n  }\n\n  get getErrors(){\n    return this.error;\n  }\n\n  getErrorMessage(key){\n    return this.error[key];\n  }\n\n  setMethod(method){\n    let validMethods = [\"GET\",\"POST\",\"PUT\",\"DELETE\"];\n    let chosenMethod = validMethods[0];\n    \n    validMethods.find(validMethod => {\n      let chosenMethod = null;\n      if ( validMethod.toLowerCase() === method.toLowerCase().trim() ){\n        chosenMethod = validMethod;\n      }\n      return chosenMethod\n    });\n\n    this.updateMethod = chosenMethod;\n    return this;\n  }\n\n  set updateMethod(method){\n    this.method = method\n  }\n\n  get getMethod(){\n    return this.method;\n  }\n  // handleResponse,handleError\n\n async makeConnection(){\n   try {\n    let response = await axios(this.getPayload)\n    let data = await response.data;\n    this.setResponseData(data)    \n    return true;\n   } catch (error) {\n       let statusCode = error.response.status ;\n       if(statusCode === 422){\n        let errors = error.response.data.errors;\n          for (error in errors){\n           this.addError(error, errors[error].toString())\n          }  \n          return false;\n       }\n\n\n\n\n    \n      // process by status codes \n     this.addError(\"connecteion Failed\", error.message)\n     return false;\n   }\n\n\n\n  \n  }\n\n  setProcessing(){\n    this.status = STATUS.PROCESSING;\n    return this;\n  }\n  \n  setIdle(){\n    this.status = STATUS.IDLE;\n    return this;    \n  } \n  \n  setFailed(){\n    this.status = STATUS.FAILED;\n    return this;\n  }\n  \n  setSuccess(){\n    this.status = STATUS.SUCCESS;\n    return this;\n  }\n\n  setClient(){\n    //this.client = axios;\n  } \n  \n  setData(data){\n    if((data !== null || Object.entries(data).length > 0) && this.method !== \"GET\"){\n      this.updateData = data;\n    }\n  }\n\n  set updateData(data){\n    this.data = data;\n  }\n\n  get getData(){\n    return this.data\n  }\n\n  setHeader(header){\n    if(header === undefined) {return false;}\n    if((header !== null && Object.entries(header).length > 0) ){\n      this.updateHeader = header;\n     }\n  }\n\n  set updateHeader(header){\n    this.header = header;\n  }\n  \n  get getHeader(){\n    return this.header;\n  }\n  \n  get getStatus() {\n    return  this.status;\n  }\n\n  setPayload(){\n    let payload = {\n      url:this.getDestination,\n      method:this.getMethod,\n    }\n\n    if(Object.entries(this.getHeader).length > 0){\n      payload['headers'] = this.getHeader;\n    }\n\n    if(this.getMethod !== \"GET\"){\n      payload['data'] = this.getData;\n    }\n\n    this.updatePayload = payload;\n  }\n\n  set updatePayload(payload){\n     this.payload = payload;\n  }\n\n  get getPayload(){\n    return this.payload;\n  }\n\n  \n  getClient(){\n    return  this.client;\n  }\n\n setResponseData(data){\n   this.updateResponseData = data;\n }\n\n set updateResponseData(data){\n     this.responseData = data\n }\n\n get getResponseData(){\n    return this.responseData;\n  }\n  \n\n}\n\n\n\nexport default IgnRequest ;\n\n\n/*\n 1. set destination url\n 2. choose method if not get method\n 3. make connection\n 4. send data\n 5. handle response.\n \n */","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/About.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/CreatePage.js",["73","74","75","76","77","78","79","80"],"//this wll be the form page\nimport React, { useState, useEffect,useCallback,createContext } from 'react';\n\nimport {INPUTS} from './.settings.json'\n\nimport IgnRequest from '../Http/Request';\nimport Errors from '../Errors/display';\n// import '../../styles/form.css';\nimport FormTags from './FormTags.js';\nimport { FormContext } from './FormContext'\nimport uuid from '../helpers/generaterandom';\n\n\n\n\n\n\nfunction CreatePage() {\n\n  let formHasErrors = true\n  const FormContent =  {\n    pageName:\"\",\n    slug:\"\",\n    description:\"\",\n    display:true\n  }\n\n\n  let submitForm  = (e)=>\n  {\n    if(!formHasErrors){return false}\n    //submitForm  \n  }\n  let handleUpdate = (e = \"\")=>{\n        if(e.length > 0){\n\n          formHasErrors =  e.trim() != \"\" ? true : false;\n        }\n\n        console.log(\"Updated form values\")\n        console.dir(FormContent)\n\n }\n \n  let CreateFormTags = (props)=>{\n    let output = [];\n    for(const input in props.inputs){\n      let inputObject = props.inputs[input];\n      output.push(<FormTags key={uuid('links')} formContentValues={FormContent} info={inputObject} onInputUpdate={handleUpdate} createWithSlug = {inputObject.hasSlug} tag={inputObject.tag} />)\n  \n    }\n    return output;\n  }\n\n\n  useEffect(()=>{ \n\n  },[FormContent])\n  \n  return (\n  \n    <div className='form-container' >\n       \n   \n      <h1>Create Pages</h1>\n     \n      <FormContext.Provider value = {{}}>\n        <CreateFormTags inputs = {INPUTS} /> \n        <button value=\"create page\" onClick={handleUpdate(FormContent)}>Create Page</button>\n        \n      </FormContext.Provider>\n      {/* <FormTags info={INPUTS.TITLE.elementData}  onInputUpdate={handleUpdate} createWithSlug = {INPUTS.TITLE.hasSlug} /> */}\n      \n       {/* <div> {test['input']} </div> */}\n     \n      {/* <CreatePageForm /> */}\n\n \n    </div>\n    \n  )\n}\n\n\n\nexport default CreatePage","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/Home.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Http/HttpEnv.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Errors/display.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/FormDisplay.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/forms/FormCreation.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/FormTags.js",["81","82","83","84","85","86","87"],"// testing react using Refs\n\nimport React, { useState, useEffect,useRef, useContext }  from 'react';\nimport Errors from '../Errors/display'\nimport { FormContext } from '../Pages/FormContext'\n\n\nlet defaultStyles = {margin:\"20px\", padding:\"8px\",fontSize:\"20px\"}\n\nconst sluggify = (data) => {\n  return data.replace(/\\s+/g, \" \").trim().replaceAll(\" \", \"-\");\n}\n\nconst FormTags = (props)=>{\n  const  [formErrors, setFormErrors]  = useState({errors: \"\"})\n  const  [hasErrors, setHasErrors]  = useState(false)\n  const {} = useContext(FormContext)\n  \n  \n  let contentErrors = {errors:[]}\n  let [manageInput,setManageInput] = useState('');\n  let[manageCheckbox,setManageCheckbox] = useState(false)\n  const inputel = useRef(\"\")\n  \n  useEffect(() =>{\ntry {\n  inputel.current.focus()\n  inputel.current.setSelectionRange(inputel.current.value.length,inputel.current.value.length)\n} catch (error) {\n  \n}\n    // inputel.current.setSelectionRange(inputel.current.value.length,inputel.current.value.length)\n  },[manageInput])\n\n\n  useEffect(()=>{\n    setFormErrors(formErrors)\n    props.onInputUpdate(formErrors.errors)\n\n  },[formErrors]);\n\n  // useEffect(()=>{\n  //   inputel.current.focus()\n  // },[setHasErrors])\n\n\n  let checkValidLength = (currentLength,validLength,checkingForMin = false)=>{\n    return checkingForMin ? minLength(currentLength,validLength) : maxLength(currentLength,validLength)\n }\n  function updateContent(){\n    let currentLength = inputel.current.value.length\n    console.log(\"The Current Value is \",inputel.current.id )\n    if(!(isEmpty(currentLength)) && inputel.current.type !== \"checkbox\"){\n      checkValidLength(currentLength,props.info.rules.MAXIMUM.value,false)\n      checkValidLength(currentLength,props.info.rules.MINIMUM.value,true)\n    }\n    setManageInput(inputel.current.value)\n    props.formContentValues[inputel.current.id] = inputel.current.value\n\n  \n    \n    // let updatedValue = inputel.current.type === \"checkbox\" ? !(updatedFormContent[inputel.current.id]) : inputel.current.value;\n    // const updatedFormContent = {...FormContent};\n    // updatedFormContent[inputel.current.id] = updatedValue\n    // setFormContent(updatedFormContent)\n    // console.log(`updating ${inputel.current.id} : ${updatedValue} ${typeof(updatedValue)} should be ${!(inputel.current.checked)} `)\n    // props.info.name === \"slug\" ?  setManageInput(props.info.value) :  setManageInput(inputel.current.value)\n  \n  }\n  \n  function addErrors(error,errorType){\n\n   let updatedErrorMessage = {...formErrors}\n   updatedErrorMessage['errors'] = error\n    setFormErrors(updatedErrorMessage)\n    setHasErrors(true)\n  }\n  function clearErrors(){\n    const updatedClearErrors = {...formErrors}\n    updatedClearErrors['errors'] = \"\"\n    setFormErrors(updatedClearErrors)\n    setHasErrors(false)\n  }\n  //error checking\n\n   let maxLength = (currentLength,validLength)=>{\n      let message =props.info.rules.MAXIMUM.errorMessage\n    //  clearErrors()\n     if(currentLength > validLength){\n      addErrors(message,\"max\")\n      // setFormErrors({errors:message})\n    }\n  }\n   let minLength = (currentLength,validLength)=>{\n     let message =props.info.rules.MINIMUM.errorMessage\n    //  clearErrors()\n     if(currentLength < validLength){\n      addErrors(message,\"min\")\n     }\n  }\n   let isEmpty = (currentLength)=>{\n    clearErrors()\n      if(currentLength < 1){\n        addErrors(props.info.rules.REQUIRED.errorMessage,\"empty\")\n        return true\n      }\n      return false\n   }\n      //error checking ends\n    \n\n   let GenerateInputTagWithSlug = (data)=>{\n    return ( \n      <div>\n        \n        <input {...data.props.info.options} onChange={updateContent} ref={inputel} style={defaultStyles} value={manageInput}  />\n        <Errors errors ={formErrors} />\n        <input name=\"slug\" readOnly={true}  placeholder=\"slug\" style={defaultStyles} value={sluggify(manageInput)} />\n      </div>\n      )\n   }\n\n   let GenerateInputTagWithoutSlug = (data) =>{\n      return (\n      <div>\n         <input {...data.props.info.options} onChange={updateContent} ref={inputel} style={defaultStyles} value={manageInput} />\n         <Errors errors ={formErrors} />\n      </div>\n      )\n   }\n   \n\n\n   function GenerateInputTag(data){\n     let output = data.props.createWithSlug ? GenerateInputTagWithSlug(data) : GenerateInputTagWithoutSlug(data);\n     return output; \n   }\n\n  function GenerateTextAreaTag(data){\n    return (\n      <div>\n         <textarea {...data.props.info.options} onChange={updateContent} ref={inputel} style={defaultStyles} value={manageInput}> </textarea>\n         <Errors errors = {formErrors} />\n      </div>\n      \n      )\n  }\n\n  function handleCheckbox(){\n   \n    // let changedTo = !inputel.current.checked\n    // console.log(`The item changed to ${changedTo}`)\n    // setManageCheckbox(!inputel.current.checked)\n    // console.log(inputel.current.checked)\n   \n  }\n  function GenerateCheckbox(data){\n    return (\n      <div>\n          {/* <label htmlFor={data.props.info.options.id}>{data.props.info.labelMessage} </label>\n          <input {...data.props.info.options} ref={inputel} onChange={updateContent} style={{padding:\"8px\",width:\"auto\"}}  checked={FormContent[data.props.info.options.id]}/> */}\n      </div>\n      \n      )\n  }\n\n  function GenerateTag(data){\n  \n    if(data.props.info.options.type === \"checkbox\"){return <GenerateCheckbox props ={props} />}\n    if(data.props.info.options.type  === \"text\"){return <GenerateInputTag props ={props} />}\n    if(data.props.info.tag === \"textarea\"){return <GenerateTextAreaTag props ={props}/> }\n    return <div></div>\n  }\n  return(\n      \n    <>\n      <GenerateTag props ={props} />\n    </>\n  )\n}\n\nexport default FormTags;","/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/Pages/FormContext.js",[],"/Users/josephosei-buapim/code/clients/igotnext/frontend/ign/src/features/helpers/generaterandom.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":118,"column":16,"nodeType":"94","messageId":"95","endLine":118,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":2,"column":17,"nodeType":"94","messageId":"98","endLine":2,"endColumn":25},{"ruleId":"96","severity":1,"message":"99","line":2,"column":37,"nodeType":"94","messageId":"98","endLine":2,"endColumn":48},{"ruleId":"96","severity":1,"message":"100","line":2,"column":49,"nodeType":"94","messageId":"98","endLine":2,"endColumn":62},{"ruleId":"96","severity":1,"message":"101","line":6,"column":8,"nodeType":"94","messageId":"98","endLine":6,"endColumn":18},{"ruleId":"96","severity":1,"message":"102","line":7,"column":8,"nodeType":"94","messageId":"98","endLine":7,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":21,"column":9,"nodeType":"105","endLine":26,"endColumn":4},{"ruleId":"96","severity":1,"message":"106","line":29,"column":7,"nodeType":"94","messageId":"98","endLine":29,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":37,"column":37,"nodeType":"109","messageId":"95","endLine":37,"endColumn":39},{"ruleId":"96","severity":1,"message":"110","line":16,"column":11,"nodeType":"94","messageId":"98","endLine":16,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":17,"column":9,"nodeType":"113","messageId":"95","endLine":17,"endColumn":11},{"ruleId":"96","severity":1,"message":"114","line":20,"column":7,"nodeType":"94","messageId":"98","endLine":20,"endColumn":20},{"ruleId":"96","severity":1,"message":"115","line":22,"column":7,"nodeType":"94","messageId":"98","endLine":22,"endColumn":21},{"ruleId":"96","severity":1,"message":"116","line":22,"column":22,"nodeType":"94","messageId":"98","endLine":22,"endColumn":39},{"ruleId":"103","severity":1,"message":"117","line":40,"column":5,"nodeType":"118","endLine":40,"endColumn":17,"suggestions":"119"},{"ruleId":"96","severity":1,"message":"120","line":149,"column":12,"nodeType":"94","messageId":"98","endLine":149,"endColumn":26},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-ex-assign","Do not assign to the exception parameter.","Identifier","unexpected","no-unused-vars","'useState' is defined but never used.","unusedVar","'useCallback' is defined but never used.","'createContext' is defined but never used.","'IgnRequest' is defined but never used.","'Errors' is defined but never used.","react-hooks/exhaustive-deps","The 'FormContent' object makes the dependencies of useEffect Hook (at line 58) change on every render. To fix this, wrap the initialization of 'FormContent' in its own useMemo() Hook.","VariableDeclarator","'submitForm' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'hasErrors' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'contentErrors' is assigned a value but never used.","'manageCheckbox' is assigned a value but never used.","'setManageCheckbox' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["123"],"'handleCheckbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [formErrors, props]",{"range":"126","text":"127"},[1106,1118],"[formErrors, props]"]